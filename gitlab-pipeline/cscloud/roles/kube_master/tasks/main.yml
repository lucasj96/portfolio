# OBS! Error when this task have already been done
- name: Initializing k8s cluster
  command: kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=All #--ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem

- name: Check if $HOME/.kube exists
  stat:
    path: $HOME/.kube
  become: yes
  become_user: ubuntu
  register: file_data

- name: Setting up kubectl on Master Node if not been done before
  shell:
    cmd: |
      mkdir -p $HOME/.kube
      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      sudo chown $(id -u):$(id -g) $HOME/.kube/config
  become: yes
  become_user: ubuntu
  when: not file_data.stat.exists

- name: Deploying calico network
  become: yes
  become_user: ubuntu
  command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

- name: Copying admin files
  become: yes
  become_user: ubuntu 
  copy: 
    src: admin
    dest: "$HOME"

# Ref: https://kubernetes.io/docs/tasks/administer-cluster/namespaces-walkthrough/
- name: Create namespaces
  become: yes
  become_user: ubuntu
  shell:
    chdir: admin
    cmd: |
      kubectl create -f blue-namespace.json
      kubectl create -f green-namespace.json

- name: Configure blue context for blue namespaces
  become: yes
  become_user: ubuntu
  command: |
    kubectl config set-context blue \
    --namespace=blue \
    --cluster=kubernetes \
    --user=kubernetes-admin
      
- name: Configure blue context for blue namespaces
  become: yes
  become_user: ubuntu
  command: |
    kubectl config set-context green \
    --namespace=green \
    --cluster=kubernetes \
    --user=kubernetes-admin

# - name: Login to CI_REGISTRY
#   become: yes
#   become_user: ubuntu
#   shell:
#     cmd: docker login -u {{ username }} -p {{ access_token }} {{ ci_registry }} 

# # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/ 
# - name: Create secret
#   become: yes
#   become_user: ubuntu
#   command: | 
#     kubectl create secret generic regcred \
#     --from-file=.dockerconfigjson=/home/ubuntu/.docker/config.json \
#     --type=kubernetes.io/dockerconfigjson